{namespace Confluence.Templates.Editor.Sections.Savebar}

/**
 * @param contentId
 * @param useDatePicker
 * @param postingDate
 * @param usePluggableStatus
 * @param versionMismatch
 * @param metadataContext
 * @param webPanelContext
 * @param sharedDraftsEnabled
 * @param contentType
 */
{template .render}
    <div id="savebar-container">
        <div id="rte-savebar" class="aui-toolbar aui-toolbar2">
            {call Confluence.Templates.Editor.Sections.Savebar.pluggablePanels}
                {param contentId: $contentId /}
                {param contextMap: $webPanelContext /}
            {/call}
            <div class="toolbar-split toolbar-split-row">
                <div class="toolbar-split toolbar-split-left">
                    {call Confluence.Templates.Editor.Sections.Savebar.metadata}
                        {param contentId: $contentId /}
                        {param useDatePicker: $useDatePicker /}
                        {param postingDate: $postingDate /}
                        {param contextMap: $metadataContext /}
                    {/call}
                </div>
                <div class="toolbar-split toolbar-split-right">
                    {call Confluence.Templates.Editor.Sections.Savebar.actions}
                        {param contentId: $contentId /}
                        {param usePluggableStatus: $usePluggableStatus /}
                        {param versionMismatch: $versionMismatch /}
                        {param sharedDraftsEnabled: $sharedDraftsEnabled /}
                        {param contentType: $contentType /}
                    {/call}
                </div>
            </div>
        </div>
    </div>
{/template}

/**
 * @param contentId
 * @param contextMap
 */
{template .pluggablePanels private="true"}
    {let $panels: panelsForLocation($contentId, 'atl.editor.savebar', $contextMap) /}
    {foreach $panel in $panels}
        {$panel.html|noAutoescape}
    {/foreach}
{/template}

/**
 * @param contentId
 * @param useDatePicker
 * @param postingDate
 * @param contextMap
 */
{template .metadata private="true"}
    <div class="aui-buttons">
        {let $items: itemsForSection($contentId, 'system.editor.savebar.buttons.secondary', $contextMap) /}
        {foreach $item in $items}
            {let $buttonId: $item.id ? $item.id : '' /}
            {let $buttonLabel: $item.label ? $item.label : '' /}
            {let $buttonTooltip: $item.tooltip ? $item.tooltip : '' /}
            {let $iconClass: $item.params['iconClass'] ? $item.params['iconClass'] : '' /}
            {let $explicitRestrictions: $item.params['explicitRestrictions'] ? $item.params['explicitRestrictions'] : '' /}
            {let $inheritedRestrictions: $item.params['inheritedRestrictions'] ? $item.params['inheritedRestrictions'] : '' /}
            <button class="aui-button toolbar-button" type="button" data-tooltip="{$buttonTooltip}" id="{$buttonId}"
                    data-explicit-restrictions="{$explicitRestrictions}" data-inherited-restrictions="{$inheritedRestrictions}">
                {if $iconClass}<span class="icon{$iconClass}"></span>{/if}
                <span class="trigger-text">{$buttonLabel}</span>
            </button>
        {/foreach}
    </div>

    {if $useDatePicker}
        <div class="aui-buttons" id="toolbar-group-blog-date">
            <span class="rte-toolbar-comment toolbar-item">
                <label for="PostingDate"><span>{getText('posting.day')}:</span></label>
            </span>
            <input id="PostingDate" name="PostingDate" value="{$postingDate}" type="text" size="10" class="text medium-field">
        </div>
    {/if}
{/template}

/**
 * @param contentId
 * @param usePluggableStatus
 * @param versionMismatch
 * @param sharedDraftsEnabled
 * @param contentType
 */
{template .actions}
    {if $usePluggableStatus}
        <div id="pluggable-status-container" class="toolbar-item rte-toolbar-pluggable-status">
            <div id="pluggable-status"></div>
        </div>
    {/if}
    <div class="aui-buttons" id="rte-savebar-tinymce-plugin-point"></div>
    <div class="aui-buttons">
        <span id="rte-spinner" class="toolbar-item {if $sharedDraftsEnabled}shared-drafts{/if}">&nbsp;</span>
    </div>

    {call Confluence.Templates.Editor.Sections.Savebar.editAndPreviewButtons}
    {/call}

    {call Confluence.Templates.Editor.Sections.Savebar.saveButton}
        {param contentId: $contentId /}
        {param versionMismatch: $versionMismatch /}
    {/call}

    {call Confluence.Templates.Editor.Sections.Savebar.cancelButton}
        {param contentType: $contentType /}
    {/call}
{/template}

/**
 * Renders the edit button and preview button
*/
{template .editAndPreviewButtons}
    /* Buttons to toggle between edit and preview modes */
    <div class="aui-buttons toolbar-group-edit assistive">
        <button id="rte-button-edit" class="aui-button" title="{getText('editor.return.to.edit')}" type="button">
            <span class="trigger-text">{getText('show.wysiwyg')}</span>
        </button>
    </div>
    <div class="aui-buttons toolbar-group-preview">
        <button class="aui-button toolbar-item aui-button-light" id="rte-button-preview" title="{getText('tinymce.confluence.preview')}" type="button">
            <span class="trigger-text">{getText('show.preview')}</span>
        </button>
    </div>
{/template}

/**
 * @param contentId
 * @param versionMismatch
 */
{template .saveButton}
    /* Submit buttons */
    <div class="save-button-container">
        {if $versionMismatch}
            <button class="aui-button aui-button-primary" type="submit" id="rte-button-overwrite" value="{getText('overwrite.name')}" name="overwrite">
                <span class="trigger-text">{getText('overwrite.name')}</span>
            </button>
        {else}
            {let $items: itemsForSection($contentId, 'system.editor.savebar.buttons.primary')/}
            {foreach $item in $items}
                {let $tabIndex: $item.params.tabindex ? $item.params.tabindex : ''/}
                {let $buttonName: $item.params['button-name'] ? $item.params['button-name'] : '' /}
                {let $buttonValue: $item.params['button-value'] ? $item.params['button-value'] : '' /}
                {let $buttonId: $item.id ? $item.id : '' /}
                {let $buttonLabel: $item.label ? $item.label : '' /}
                {let $buttonTooltip: $item.tooltip ? $item.tooltip : '' /}
                <button class="aui-button aui-button-primary" type="submit" id="{$buttonId}" name="{$buttonName}" value="{$buttonValue}" title="{$buttonTooltip}">
                    <span class="trigger-text">{$buttonLabel}</span>
                </button>
            {/foreach}
        {/if}
    </div>
{/template}

/**
 * A cancel button appropriate to the content type being edited.
 * @param contentType
 */
{template .cancelButton}
    /* Cancel link */
    <button class="toolbar-item-link aui-button aui-button-link" type="submit" id="rte-button-cancel" name="cancel" value="cancel">
        {if $contentType == 'page' or $contentType == 'blogpost'}
            {getText('close.name')}
        {else}
            {getText('cancel.name')}
        {/if}
    </button>
{/template}